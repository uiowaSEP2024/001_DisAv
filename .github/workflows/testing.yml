name: CI testing

on:
  pull_request:

jobs:
  test-web:
    runs-on: ubuntu-latest
    outputs:
      coverageReportUrl: ${{ steps.upload_coverage.outputs.artifact_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies (Web)
        run: cd web && npm install
      - name: Run tests with coverage (Web)
        run: cd web && npm test -- --coverage --watchAll=false
      - name: Archive coverage report (Web)
        uses: actions/upload-artifact@v2
        with:
          name: coverage-web
          path: web/coverage
          # Set the output for coverage report URL
          id: upload_coverage

  test-mobile:
    runs-on: ubuntu-latest
    outputs:
      coverageReportUrl: ${{ steps.upload_coverage.outputs.artifact_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies (Mobile)
        run: cd mobile && npm install --force
      - name: Run tests with coverage (Mobile)
        run: cd mobile && npm test --coverage --watchAll=false
      - name: Archive coverage report (Mobile)
        uses: actions/upload-artifact@v2
        with:
          name: coverage-mobile
          path: mobile/coverage
          # Set the output for coverage report URL
          id: upload_coverage

  test-server:
    runs-on: ubuntu-latest
    outputs:
      coverageReportUrl: ${{ steps.upload_coverage.outputs.artifact_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies (Server)
        run: cd server && npm install
      - name: Run tests with coverage (Server)
        env:
          MONGO_UNAME: ${{ secrets.MONGO_UNAME }}
          MONGO_PWD: ${{ secrets.MONGO_PWD }}
          GPT_KEY: ${{ secrets.GPT_KEY }}
        run: cd server && npm test --coverage --watchAll=false
      - name: Archive coverage report (Server)
        uses: actions/upload-artifact@v2
        with:
          name: coverage-server
          path: server/coverage
          # Set the output for coverage report URL
          id: upload_coverage

  test-extension:
    runs-on: ubuntu-latest
    outputs:
      coverageReportUrl: ${{ steps.upload_coverage.outputs.artifact_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies (Extension)
        run: cd extension && npm install
      - name: Run tests with coverage (Extension)
        run: cd extension && npm test --coverage --watchAll=false
      - name: Archive coverage report (Extension)
        uses: actions/upload-artifact@v2
        with:
          name: coverage-extension
          path: extension/coverage
          # Set the output for coverage report URL
          id: upload_coverage
